/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_MESSAGESERVERSTUB_H_
#define JSONRPC_CPP_STUB_MESSAGESERVERSTUB_H_

#include <jsonrpccpp/server.h>

class messageserverstub : public jsonrpc::AbstractServer<messageserverstub>
{
    public:
        messageserverstub(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<messageserverstub>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("getMessageFromHeaders", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_ARRAY, "param1",jsonrpc::JSON_STRING, NULL), &messageserverstub::getMessageFromHeadersI);
            this->bindAndAddMethod(jsonrpc::Procedure("getMessage", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param1",jsonrpc::JSON_STRING,"param2",jsonrpc::JSON_STRING, NULL), &messageserverstub::getMessageI);
            this->bindAndAddMethod(jsonrpc::Procedure("deleteMessage", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING,"param2",jsonrpc::JSON_STRING, NULL), &messageserverstub::deleteMessageI);
            this->bindAndAddMethod(jsonrpc::Procedure("initGroupFromJsonFile", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN,  NULL), &messageserverstub::initGroupFromJsonFileI);
            this->bindAndAddMethod(jsonrpc::Procedure("sendClearText", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING,"param2",jsonrpc::JSON_STRING,"param3",jsonrpc::JSON_STRING,"param4",jsonrpc::JSON_STRING,"param5",jsonrpc::JSON_STRING,"param6",jsonrpc::JSON_STRING,"param7",jsonrpc::JSON_STRING,"param8",jsonrpc::JSON_STRING,"param9",jsonrpc::JSON_STRING, NULL), &messageserverstub::sendClearTextI);
        }

        inline virtual void getMessageFromHeadersI(const Json::Value &request, Json::Value &response)
        {
            response = this->getMessageFromHeaders(request[0u].asString());
        }
        inline virtual void getMessageI(const Json::Value &request, Json::Value &response)
        {
            response = this->getMessage(request[0u].asString(), request[1u].asString());
        }
        inline virtual void deleteMessageI(const Json::Value &request, Json::Value &response)
        {
            response = this->deleteMessage(request[0u].asString(), request[1u].asString());
        }
        inline virtual void initGroupFromJsonFileI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->initGroupFromJsonFile();
        }
        inline virtual void sendClearTextI(const Json::Value &request, Json::Value &response)
        {
            response = this->sendClearText(request[0u].asString(), request[1u].asString(), request[2u].asString(), request[3u].asString(), request[4u].asString(), request[5u].asString(), request[6u].asString(), request[7u].asString(), request[8u].asString());
        }
        virtual Json::Value getMessageFromHeaders(const std::string& param1) = 0;
        virtual Json::Value getMessage(const std::string& param1, const std::string& param2) = 0;
        virtual bool deleteMessage(const std::string& param1, const std::string& param2) = 0;
        virtual bool initGroupFromJsonFile() = 0;
        virtual bool sendClearText(const std::string& param1, const std::string& param2, const std::string& param3, const std::string& param4, const std::string& param5, const std::string& param6, const std::string& param7, const std::string& param8, const std::string& param9) = 0;
};

#endif //JSONRPC_CPP_STUB_MESSAGESERVERSTUB_H_
